Tips & Tricks collections:
1. Collections houden objecten bij, dus primitieve data zullen via autoboxing omgevormd worden naar wrappers, zijnde :
*Integer
*Byte
*Long
*Float
*Double
*Boolean
*Character

2. Collection wordt vaak gebruikt als parametertype, zodat polymorf gebruik van de methode mogelijk wordt

3. Je hebt ook gesynchroniseerde collections, die gebruikt worden bij threading: als er namelijk meerdere
programma's tegelijkertijd lopen, kan de data niet tegelijkertijd aangepast worden. Vandaar de noodzaak van
gesynchroniseerde collections.

4. Wanneer een iterator is gemaakt voor een collection, en deze collection is vervolgens aangepast geweest
dan is de iterator niet meer correct, en dient deze opnieuw aangemaakt te worden.
Er verschijnt dan een ConcurrentModificationException !!


5. een aantal belangrijke methoden :
- sort : sorteert de elementen van een lijst. Kan specifieker via Comaparable interface
- binarySearch : lokaliseert een object in een collectie en geeft index terug
- reverse : verandert de volgorde van de objecten
- shuffle : verandert alle elementen van plaats
- fill : ieder List element refereert naar een bepaald object
- copy : kopieert de referenties van objecten van de ene lijst naar de andere; van de source list,
        naar de destination list, beide lijsten moeten even lang zijn, anders krijg je een IndexOutOfBoundException
- min : kleinste element
- max : grootste element
- addAll : voegt alle elementen toe
- frequency : hoe  vaak komt een bepaald element voor
- disjoint : controleert of collections bepaalde elementen gemeenschappelijk hebben

6. Belangrijke methoden van de interface Collection :
- (boolean) add
- (boolean) remove
- clear()
- (boolean) contains (Object o)
- Iterator <dataType> iterator ()
- int size
- forEach()

7. extra methoden List :
Een list is een geordende verzameling waarin duplicaten kunnen voorkomen. Ieder element
in de verzameling heeft een bepaalde indexwaarde.

- add (int index, object) --> voegt toe en alles schuift op
- set (int index, object) --> vervangt het element dat op die positie stond
- get (int index) --> geeft het element weer op die indexplaats
- remove (int index) --> verwijdert een element op een bepaalde positie en alles schuift op





